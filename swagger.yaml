---
swagger: "2.0"
info:
  description:
    "This is a sample server Petstore server.  You can find out more about\
    \ Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\
    \  For this sample, you can use the api key `special-key` to test the authorization\
    \ filters."
  version: "1.0.5"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "pet"
    description: "Everything about your Pets"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "store"
    description: "Access to Petstore orders"
  - name: "user"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
schemes:
  - "https"
  - "http"
paths:
  /login:
    post:
      tags:
        - "user"
      summary: "User Login"
      operationId: "userLogin"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "loginData"
          description: "User login data"
          required: true
          schema:
            $ref: "#/definitions/LoginData"
      responses:
        200:
          description: "Login successful"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
        401:
          description: "Unauthorized"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /register:
    post:
      tags:
        - "user"
      summary: "User Registration"
      operationId: "userRegistration"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "userData"
          description: "User registration data"
          required: true
          schema:
            $ref: "#/definitions/RegistrationData"
      responses:
        200:
          description: "Registration successful"
          schema:
            type: "object"
            properties:
              token:
                type: "string"
        400:
          description: "Bad Request"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
definitions:
  RegistrationData:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
  LoginData:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
